# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'
- task: Maven@4
  inputs:
    azureSubscription: 'Free Trial(fb962878-3638-424f-828d-9981df032f64)'
    mavenPomFile: 'pom.xml'
    goals: 'compile'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'

- task: dependency-check-build-task@6
  inputs:
    projectName: 'flyseum'
    scanPath: '/home/vsts/work/1/s/target'''
    format: 'HTML'
    uploadReports: true

- task: SnykSecurityScan@1
  inputs:
    serviceConnectionEndpoint: 'snyk connection'
    testType: 'app'
    monitorWhen: 'always'
    failOnIssues: true

- task: SonarCloudPrepare@2
  inputs:
    SonarCloud: 'sonarcloud connection'
    organization: 'my-devops-decoding'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'my-devops-decoding'
    cliProjectName: 'flyseum'
    cliSources: '.'
    extraProperties: |
      # Additional properties that will be passed to the scanner, 
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.java.binaries=. 

- task: SonarCloudAnalyze@2
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

- task: SonarCloudPublish@2
  inputs:
    pollingTimeoutSec: '300'